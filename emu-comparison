#!/usr/bin/perl -w

use strict;
use IPC::Open2;
require q{graph-support.pl};

# Parse arguments
if ( scalar @ARGV != 2 ) {
  die qq{Usage: $0 DIRNAME_ORIGINAL DIRNAME_EMULATED\n};
}

my ( $orig_dirname, $emu_dirname ) = @ARGV;

my %orig = %{ analyze_resultset( $orig_dirname ) };
my %emu = %{ analyze_resultset( $emu_dirname ) };

# expand graph
my $display_minimum_throughput = $orig{ limits }[ 0 ] - 0.1 * ($orig{ limits }[ 1 ] - $orig{ limits }[ 0 ]);
$display_minimum_throughput = 0 if $display_minimum_throughput < 0;
my $display_maximum_throughput = $orig{ limits }[ 1 ] + 0.1 * ($orig{ limits }[ 1 ] - $orig{ limits }[ 0 ]);
my $display_minimum_delay = 0.8 * $orig{ limits }[ 2 ];
my $display_maximum_delay = 1.25 * $orig{ limits }[ 3 ];

my $gnuplot_pid = open2( my $gnuplot_reader, my $gnuplot_writer, q{gnuplot} ) or die qq{gnuplot: $!};

print $gnuplot_writer <<"END";
set xlabel "delay (95th percentile ms)"
set ylabel "throughput (Mbits/s)"
set terminal svg size 1024,768 fsize 20 rounded solid
set logscale x
unset key
set xrange [$display_maximum_delay:$display_minimum_delay] reverse
set yrange [$display_minimum_throughput:$display_maximum_throughput]
set xtics 2
END

my %display_name = ( copa => q{Copa}, default_tcp => q{TCP Cubic}, greg_saturator => q{GHsat},
		     koho_cc => q{Koho}, ledbat => q{LEDBAT}, pcc => q{PCC},
		     quic => q{QUIC Cubic}, saturator => q{YYsat},
		     scream => q{SCReAM}, sprout => q{Sprout},
		     vegas => q{Vegas}, verus => q{Verus}, webrtc => q{WebRTC} );

# print labels
for my $scheme ( sort keys %{ $orig{ median } } ) {
  print $gnuplot_writer qq{set label "$display_name{ $scheme }" at $orig{ median}{ $scheme }{ delay }, $orig{ median }{ $scheme }{ throughput } point center offset -1, 1\n};
}

print $gnuplot_writer qq{plot "-" using 1:2 lt 6 ps 2.0 lc rgb "#000000ff"\n};
for my $scheme ( sort keys %{ $emu{ median } } ) {
  print $gnuplot_writer qq{$emu{ median }{ $scheme }{ delay } $emu{ median }{ $scheme }{ throughput }\n};
}

close $gnuplot_writer or die qq{$!};

while ( <$gnuplot_reader> ) {
  print;
}

close $gnuplot_reader or die qq{$!};

waitpid( $gnuplot_pid, 0 );
